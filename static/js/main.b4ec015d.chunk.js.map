{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Signin.js","components/PrivateRoute.js","components/PasswordReset.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","pw","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","password","Provider","Signup","emailRef","useRef","pwRef","pwConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","toast","duration","success","setTimeout","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Signin","PrivateRoute","Component","component","otherComponents","render","props","PasswordReset","UpdateProfile","handlePromises","Value","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","basename","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ec015d.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport const auth = app.auth();\nexport default app;\n","import React, { useContext, useState, createContext, useEffect } from 'react';\nimport { auth } from \"../firebase\";\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    function signUp(email, pw) {\n        return auth.createUserWithEmailAndPassword(email, pw);\n    }\n\n    function signIn(email, pw) {\n        return auth.signInWithEmailAndPassword(email, pw);\n    }\n\n    function signOut() {\n        return auth.signOut();\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email);\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user); // initially set user \n            setLoading(false); // then set loading to false\n        })\n\n        return unsubscribe;\n    }, []);\n\n    \n    const value = { currentUser, signUp, signIn, signOut, resetPassword, updateEmail, updatePassword };\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const pwRef = useRef();\n  const pwConfirmRef = useRef();\n  const { signUp, currentUser } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (pwRef.current.value !== pwConfirmRef.current.value) {\n      // pw does not match pwConfirm\n      toast.error(\"Passwords do not match!\", { duration: 3000 });\n      return;\n    }\n\n  \n    try {\n      setError(\"\"); // Reset\n      setLoading(true);\n      await signUp(emailRef.current.value, pwRef.current.value);\n      toast.success(\"Account created!\", { duration: 1500 });\n      setTimeout(() => {\n        history.push(\"/\"); // redirect to dashboard page once successful\n      }, 1500);\n    } catch {\n      toast.error(\"Failed to create account.\", { duration: 4000 });\n    }\n    setLoading(false);\n  }\n    \n  return (\n    <>\n      <Toaster />\n      <Card>\n        <Card.Body>\n          <h3 className=\"text-center mb-4\">Sign Up</h3>\n          { error && \n            <Alert variant=\"danger\">{error}</Alert>\n          }\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={pwRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={pwConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">Sign Up</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n          Already have an account? <Link to=\"/signin\">Sign In</Link>\n      </div>  \n    </>\n  )\n}\n","import React, { useState } from 'react';\r\nimport { Card, Button, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst Dashboard = () => {\r\n\r\n  async function handleSignOut() {\r\n    setError(\"\"); // reset\r\n\r\n    try {\r\n      await signOut();\r\n      toast.success(\"Signed out!\", { duration: 1500 });\r\n      setTimeout(() => {\r\n        \r\n      }, 1500);\r\n      history.push(\"/signin\"); // redirect to dashboard page once successful\r\n    } catch {\r\n      toast.error(\"Failed to sign out.\", { duration: 3000 });\r\n    }\r\n    \r\n  }\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, signOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  return (  \r\n    <div>\r\n      <Toaster />\r\n      <Card>\r\n        <Card.Body>\r\n          <h3 className=\"text-center mb-4\">Profile</h3>\r\n          { error && \r\n            <Alert variant=\"danger\">{error}</Alert>\r\n          }\r\n          <strong>Email:</strong> { currentUser.email}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleSignOut}>Sign Out</Button>\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Dashboard;","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function Signin() {\r\n  const emailRef = useRef();\r\n  const pwRef = useRef();\r\n  const { signIn } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      setError(\"\"); // Reset\r\n      setLoading(true);\r\n      await signIn(emailRef.current.value, pwRef.current.value);\r\n      toast.success(\"Signed in!\", { duration: 1500 });\r\n      setTimeout(() => {\r\n        history.push(\"/\"); // redirect to dashboard page once successful\r\n        setLoading(false);\r\n      }, 1500);\r\n    } catch {\r\n      toast.error(\"Failed to sign in.\", { duration: 3000 });\r\n    }\r\n    setLoading(false);\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <h1 className=\"text-center mb-5\">kDrive</h1>\r\n      <Card>\r\n        <Card.Body>\r\n          <h3 className=\"text-center mb-4\">Sign In</h3>\r\n          { error && \r\n            <Alert variant=\"danger\">{error}</Alert>\r\n          }\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={pwRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">Sign In</Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-4\">\r\n            <Link to=\"/reset\">Forgot password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>  \r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...otherComponents }) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (  \r\n    <Route\r\n      {...otherComponents}\r\n      render = {props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }}\r\n    >\r\n\r\n    </Route>\r\n  );\r\n}\r\n \r\nexport default PrivateRoute;","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function PasswordReset() {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      setError(\"\"); // Reset\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      toast.success(\"Password reset e-mail has been sent!\", { duration: 4000 });\r\n    } catch {\r\n      setError(\"Please double check the E-mail address.\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Card>\r\n        <Card.Body>\r\n          <h3 className=\"text-center mb-4\">Reset Password</h3>\r\n          { error && \r\n            <Alert variant=\"danger\">{error}</Alert>\r\n          }\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">Reset Password</Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-4\">\r\n            <Link to=\"/signin\">Sign In</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>  \r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const pwRef = useRef();\r\n  const pwConfirmRef = useRef();\r\n  const { currentUser, updateEmail, updatePassword } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (pwRef.current.value !== pwConfirmRef.current.value) {\r\n      // pw does not match pwConfirm\r\n      toast.error(\"Passwords do not match!\", { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    const handlePromises = []; // init\r\n    setError(\"\"); // Reset\r\n    setLoading(true);\r\n\r\n    if (emailRef.current.Value !== currentUser.email) {\r\n      handlePromises.push(updateEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (pwRef.current.value) { // already guaranteed that pw/pwRef match\r\n      handlePromises.push(updatePassword(pwRef.current.value));\r\n    }\r\n\r\n    Promise.all(handlePromises).then(() => {\r\n      toast.success(\"Profile successfully updated!\", { duration: 1500 });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n        setLoading(false)\r\n      }, 1500);\r\n    }).catch(() => {\r\n      toast.error(\"Profile update failed.\", { duration: 4000 });\r\n    }).finally(() => {\r\n    });\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Card>\r\n        <Card.Body>\r\n          <h3 className=\"text-center mb-4\">Update Profile</h3>\r\n          { error && \r\n            <Alert variant=\"danger\">{error}</Alert>\r\n          }\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required defaultValue={ currentUser.email } />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={pwRef} placeholder=\"Leave blank to keep the same password\" />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={pwConfirmRef} placeholder=\"Leave blank to keep the same password\" />\r\n            </Form.Group>\r\n            <Button disabled={loading} type=\"submit\" className=\"w-100\">Update</Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Go back</Link>\r\n      </div>  \r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport Signup from './Signup';\nimport { Container } from 'react-bootstrap';\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport Signin from './Signin';\nimport PrivateRoute from './PrivateRoute';\nimport PasswordReset from './PasswordReset';\nimport UpdateProfile from './UpdateProfile';\n\nfunction App() {\n  return (\n    <Container className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}>\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/signin\" component={Signin} />\n              <Route path=\"/reset\" component={PasswordReset} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            </Switch>  \n          </AuthProvider>\n        </Router>    \n      </div>\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}